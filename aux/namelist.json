{
  "TIME_UTC": {
    "main": {
      "name": "This block defines variables related to date and time. It is used by FALL3D, SetDbs, and SetSrc tasks",
      "params": {
        "YEAR": {
          "default": 2008,
          "description": "Year of the starting date",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "MONTH": {
          "default": 4,
          "description": "Month of the starting date",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "DAY": {
          "default": 29,
          "description": "Day of the starting date",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "RUN_START_(HOURS_AFTER_00)": {
          "default": 0,
          "description": "Starting time in hours after 00:00 UTC of the starting day",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "RUN_END_(HOURS_AFTER_00)": {
          "default": 10,
          "description": "End time in hours after 00:00 UTC of the starting day",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Runs can continue even after the source term has been switched off (e.g., when the eruption has stopped)"
        },
        "INITIAL_CONDITION": {
          "default": "NONE",
          "description": "Type of initial concentration field",
          "inputs": [
            "NONE",
            "INSERTION",
            "RESTART"
          ],
          "inputs_str": [
            "Initial concentration is zero",
            "Initial concentration from an input file",
            "Initial concentration from a previous run"
          ],
          "required": true,
          "note": ""
        },
        "RESTART_FILE": {
          "default": "Example-8.0.rst.nc",
          "description": "Path to the restart file",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `INITIAL_CONDITION = RESTART`"
        },
        "RESTART_ENSEMBLE_BASEPATH": {
          "default": "./",
          "description": "Root path for `RESTART_FILE`",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": "Used for ensemble runs when multiple restart files are available (`RESTART_ENSEMBLE_BASEPATH`/0001/`RESTART_FILE`...). If not provided a single restart file is used for the ensemble (`RESTART_FILE`)"
        }
      }
    }
  },
  "INSERTION_DATA": {
    "main": {
      "name": "This block is read by the FALL3D task only if `INITIAL_CONDITION` = `INSERTION`",
      "params": {
        "INSERTION_FILE": {
          "default": "Example-8.0.sat.nc",
          "description": "Path to the initial condition file in netCDF format (e.g. a satellite retrieval)",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "INSERTION_DICTIONARY_FILE": {
          "default": "Sat.tbl",
          "description": "Path to the insertion dictionary file defining the variable names. An example can be found in `Other/Sat/Sat.tbl`",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": "If not given, a default dictionary will be used"
        },
        "INSERTION_TIME_SLAB": {
          "default": 4,
          "description": "Time slab in the insertion file to be used as the initial conditions",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "DIAMETER_CUT_OFF_(MIC)": {
          "default": 64,
          "description": "Cut-off diameter in microns. Maximum particle diameter used to define the initial condition",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": ""
        }
      }
    }
  },
  "METEO_DATA": {
    "main": {
      "name": "This block defines variables related to the input meteorological dataset. It is read by the SetDbs task",
      "params": {
        "METEO_DATA_FORMAT": {
          "default": "WRF",
          "description": "Input meteorological model",
          "inputs": [
            "WRF",
            "GFS",
            "ERA5",
            "ERA5ML",
            "IFS",
            "CARRA"
          ],
          "inputs_str": [
            "Advanced Research WRF (ARW), WRF-ARW - Mesoscale model",
            "Global Forecast System - Global weather forecast model",
            "ERA5 ECMWF reanalysis in pressure levels - Global climate and weather renalysis",
            "ERA5 ECMWF reanalysis in model levels - Global climate and weather renalysis",
            "ECMWF Integrated Forecasting System - Global weather forecast model",
            "Copernicus Arctic Regional Reanalysis in pressure levels - Arctic regional reanalysis"
          ],
          "required": true,
          "note": ""
        },
        "METEO_DATA_DICTIONARY_FILE": {
          "default": "WRF.tbl",
          "description": "Path to the database dictionary file defining the variable names. An example can be found in the folder `Other/Meteo/Tables`",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": " If not given, a default dictionary for each model will be used"
        },
        "METEO_DATA_FILE": {
          "default": "Example-8.0.wrf.nc",
          "description": "Path to the meteo model data file in netCDF format",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "METEO_ENSEMBLE_BASEPATH": {
          "default": "./",
          "description": "Root path for `METEO_DATA_FILE`",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": "Used for ensemble runs when multiple meteo files are available (`METEO_ENSEMBLE_BASEPATH`/0001/`METEO_DATA_FILE`...). If not provided a single meteo file is used for the ensemble (`METEO_DATA_FILE`)"
        },
        "METEO_LEVELS_FILE": {
          "default": "ERA5.hyb",
          "description": "Path to the table defining the coefficients for vertical hybrid levels",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only required if `METEO_DATA_FORMAT` = `ERA5ML`"
        },
        "DBS_BEGIN_METEO_DATA_(HOURS_AFTER_00)": {
          "default": 0,
          "description": "Starting time for the database file in hours after 00:00 UTC of the starting day",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "DBS_END_METEO_DATA_(HOURS_AFTER_00)": {
          "default": 24,
          "description": "End time for the database file in hours after 00:00 UTC of the starting day",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "METEO_COUPLING_INTERVAL_(MIN)": {
          "default": 60,
          "description": "Time interval to update (couple) meteorological variables",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "wind velocity is linearly interpolated in time for each time step"
        },
        "MEMORY_CHUNK_SIZE": {
          "default": 5,
          "description": "Size of memory chunks used to store meteo data timesteps",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Must be greater than 1"
        }
      }
    }
  },
  "GRID": {
    "main": {
      "name": "This block defines the grid variables needed by the SetDbs and FALL3D tasks",
      "params": {
        "HORIZONTAL_MAPPING": {
          "default": "SPHERICAL",
          "description": "Horizontal mapping",
          "inputs": [
            "CARTESIAN",
            "SPHERICAL"
          ],
          "inputs_str": [
            "Cartesian mapping",
            "Spherical mapping"
          ],
          "required": true,
          "note": ""
        },
        "VERTICAL_MAPPING": {
          "default": "SIGMA_LINEAR_DECAY",
          "description": "Vertical mapping",
          "inputs": [
            "SIGMA_NO_DECAY",
            "SIGMA_LINEAR_DECAY",
            "SIGMA_EXPONENTIAL_DECAY"
          ],
          "inputs_str": [
            "Terrain following levels with no decay",
            "Terrain following levels with linear decay from surface to the flat top",
            "Terrain following levels with exponential decay from surface to the flat top"
          ],
          "required": true,
          "note": ""
        },
        "LONMIN": {
          "default": 14.0,
          "description": "West longitude in decimal degrees of the domain",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "LONMAX": {
          "default": 16.0,
          "description": "East longitude in decimal degrees of the domain",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "LATMIN": {
          "default": 36.5,
          "description": "South latitude in decimal degrees of the domain",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "LATMAX": {
          "default": 38.5,
          "description": "North latitude in decimal degrees of the domai",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "NX": {
          "default": 50,
          "description": "Define the number of grid cells or resolution along dimension x",
          "inputs": [
            "integer",
            "RESOLUTION float"
          ],
          "inputs_str": [
            "Number of grid cells (mass points) along x",
            "Resolution (grid size) along x"
          ],
          "required": true,
          "note": ""
        },
        "NY": {
          "default": 50,
          "description": "Define the number of grid cells or resolution along dimension y",
          "inputs": [
            "integer",
            "RESOLUTION float"
          ],
          "inputs_str": [
            "Number of grid cells (mass points) along y",
            "Resolution (grid size) along y"
          ],
          "required": true,
          "note": ""
        },
        "NZ": {
          "default": 10,
          "description": "Define the number of grid cells (mass points) along dimension z",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "ZMAX_(M)": {
          "default": 10000,
          "description": "Top height of the computational domain in meters",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "SIGMA_VALUES": {
          "default": [
            0.0,
            0.01,
            0.025,
            0.05,
            0.1
          ],
          "description": "List of values of sigma coordinate in the range (0,1). The list size should be less or equal than `NZ`+1",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": "If not present, uniform distribution of vertical layers is assumed"
        }
      }
    }
  },
  "SPECIES": {
    "main": {
      "name": "This block is used by FALL3D, SetTgsd, and SetSrc tasks and defines which species are modeled",
      "params": {
        "TEPHRA": {
          "default": "On",
          "description": "Indicate if `TEPHRA` species are included",
          "inputs": [
            "ON",
            "OFF"
          ],
          "inputs_str": [
            "Activate tephra particle species",
            "Deactivate tephra particle species"
          ],
          "required": true,
          "note": ""
        },
        "DUST": {
          "default": "Off",
          "description": "Indicate if `DUST` species are included",
          "inputs": [
            "ON",
            "OFF"
          ],
          "inputs_str": [
            "Activate dust particle species",
            "Deactivate dust particle species"
          ],
          "required": true,
          "note": ""
        },
        "H2O": {
          "default": "Off",
          "description": "Indicate if `H2O` aerosol species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate H2O aerosol species and set the mass fraction in percent",
            "Deactivate H2O aerosol species"
          ],
          "required": true,
          "note": "Aerosols can run independently or coupled with tephra species.\n               If `TEPHRA` = `ON` it is assumed that the aerosol species are all of \n               magmatic origin mass fraction of `SO2` and `H2O` are relative to tephra.\n               If `TEPHRA` = `OFF` then the mass fraction of aerosols must sum 1"
        },
        "SO2": {
          "default": "On MASS_FRACTION_(%) = 1.",
          "description": "Indicate if `SO2` aerosol species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate SO2 aerosol species and set the mass fraction in percent",
            "Deactivate SO2 aerosol species"
          ],
          "required": true,
          "note": "Aerosols can run independently or coupled with tephra species.\n               If `TEPHRA` = `ON` it is assumed that the aerosol species are all of \n               magmatic origin mass fraction of `SO2` and `H2O` are relative to tephra.\n               If `TEPHRA` = `OFF` then the mass fraction of aerosols must sum 1"
        },
        "CS134": {
          "default": "Off",
          "description": "Indicate if `CS-134` radionuclide species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate Cs-134 radionuclide species and set the mass fraction in percent",
            "Deactivate Cs-134 radionuclide species"
          ],
          "required": true,
          "note": "All species of RADIONUCLIDES can run simultaneously but are incompatible with \n               species of category PARTICLES. Mass fraction of all radionuclides must sum 1"
        },
        "CS137": {
          "default": "Off",
          "description": "Indicate if `CS-137` radionuclide species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate Cs-137 radionuclide species and set the mass fraction in percent",
            "Deactivate Cs-137 radionuclide species"
          ],
          "required": true,
          "note": "All species of RADIONUCLIDES can run simultaneously but are incompatible with \n               species of category PARTICLES. Mass fraction of all radionuclides must sum 1"
        },
        "I131": {
          "default": "Off",
          "description": "Indicate if `I-131` radionuclide species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate I-131 radionuclide species and set the mass fraction in percent",
            "Deactivate I-131 radionuclide species"
          ],
          "required": true,
          "note": "All species of RADIONUCLIDES can run simultaneously but are incompatible with \n               species of category PARTICLES. Mass fraction of all radionuclides must sum 1"
        },
        "SR90": {
          "default": "Off",
          "description": "Indicate if `SR-90` radionuclide species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate Sr-90 radionuclide species and set the mass fraction in percent",
            "Deactivate Sr-90 radionuclide species"
          ],
          "required": true,
          "note": "All species of RADIONUCLIDES can run simultaneously but are incompatible with \n               species of category PARTICLES. Mass fraction of all radionuclides must sum 1"
        },
        "Y90": {
          "default": "Off",
          "description": "Indicate if `Y-90` radionuclide species are included",
          "inputs": [
            "ON MASS_FRACTION_(%) = float",
            "OFF"
          ],
          "inputs_str": [
            "Activate Y-90 radionuclide species and set the mass fraction in percent",
            "Deactivate Y-90 radionuclide species"
          ],
          "required": true,
          "note": "All species of RADIONUCLIDES can run simultaneously but are incompatible with \n               species of category PARTICLES. Mass fraction of all radionuclides must sum 1"
        }
      }
    }
  },
  "SPECIES_TGSD": {
    "main": {
      "name": "These blocks define the TGSD for each species and are used by the SetTgsd task to generate some basic distributions",
      "params": {
        "NUMBER_OF_BINS": {
          "default": 6,
          "description": "Number of bins in the TGSD",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "This value can be different from the number of classes defined in the granulometry file `*.grn` created by the SetSrc task if aggregate bins are included later on or if a cut-off diameter is imposed"
        },
        "FI_RANGE": {
          "default": [
            -2,
            8
          ],
          "description": "A list of two values defining the minimum and maximum diameters in phi units",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "DENSITY_RANGE": {
          "default": [
            1200,
            2300
          ],
          "description": "A list of two values defining the minimum and maximum densities",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Linear interpolation (in phi) is assumed between the extremes"
        },
        "SPHERICITY_RANGE": {
          "default": [
            0.9,
            0.9
          ],
          "description": "A list of two values defining the minimum and maximum values for sphericity",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Linear interpolation (in phi) is assumed between the extremes"
        },
        "DISTRIBUTION": {
          "default": "GAUSSIAN",
          "description": "Type of TGSD distribution",
          "inputs": [
            "GAUSSIAN",
            "BIGAUSSIAN",
            "WEIBULL",
            "BIWEIBULL",
            "CUSTOM",
            "ESTIMATE"
          ],
          "inputs_str": [
            "Gaussian distribution",
            "bi-Gaussian distribution",
            "Weibull distribution",
            "bi-Weibull distribution",
            "Custom distribution from an external user file",
            "TGSD is estimated from column height and magma viscosity (for tephra species only)"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_GAUSSIAN": {
      "name": "Used when `DISTRIBUTION`=`GAUSSIAN`",
      "params": {
        "FI_MEAN": {
          "default": 2.5,
          "description": "Mean of the gaussian distribution in phi units",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "FI_DISP": {
          "default": 1.5,
          "description": "Standard deviation of the gaussian distribution in phi units",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_BIGAUSSIAN": {
      "name": "Used when `DISTRIBUTION`=`BIGAUSSIAN`",
      "params": {
        "FI_MEAN": {
          "default": [
            0.25,
            0.75
          ],
          "description": "A list of two values in phi units defining the means of two gaussian distributions",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "FI_DISP": {
          "default": [
            1.44,
            1.46
          ],
          "description": "A list of two values in phi units defining the standard deviations of two gaussian distributions",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "MIXING_FACTOR": {
          "default": 0.5,
          "description": "The mixing factor between both gaussian distributions",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_WEIBULL": {
      "name": "Used when `DISTRIBUTION`=`WEIBULL`",
      "params": {
        "FI_SCALE": {
          "default": 1.0,
          "description": "Parameter of the Weibull distribution",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "W_SHAPE": {
          "default": 1.0,
          "description": "Parameter of the Weibull distribution",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_BIWEIBULL": {
      "name": "Used when `DISTRIBUTION`=`BIWEIBULL`",
      "params": {
        "FI_SCALE": {
          "default": [
            1.0,
            1.0
          ],
          "description": "List of parameters for the bi-Weibull distribution",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "W_SHAPE": {
          "default": [
            1.0,
            1.0
          ],
          "description": "List of parameters for the bi-Weibull distribution",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "MIXING_FACTOR": {
          "default": 0.5,
          "description": "Parameter of the bi-Weibull distribution",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_CUSTOM": {
      "name": "Used when `DISTRIBUTION`=`CUSTOM`",
      "params": {
        "FILE": {
          "default": "my_file.tgsd",
          "description": "Path to the file with the custom TGSD",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_ESTIMATE": {
      "name": "Used when `DISTRIBUTION`=`ESTIMATE`",
      "params": {
        "VISCOSITY_(PAS)": {
          "default": 1000000.0,
          "description": "Magma viscosity in Pa.s",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "HEIGHT_ABOVE_VENT_(M)": {
          "default": 20000,
          "description": "Eruption column height above vent in meters",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    }
  },
  "PARTICLE_AGGREGATION": {
    "main": {
      "name": "This block is used by task SetSrc and controls particle aggregation and cut-off (for categories particles and radionuclides only)",
      "params": {
        "PARTICLE_CUT_OFF": {
          "default": "NONE",
          "description": "Specifies a cut off diamater",
          "inputs": [
            "NONE",
            "FI_LOWER_THAN float",
            "FI_LARGER_THAN float",
            "D_(MIC)_LARGER_THAN float",
            "D_(MIC)_LOWER_THAN float"
          ],
          "inputs_str": [
            "No cut-off used",
            "Define an upper cut-off limit in phi units",
            "Define a lower cut-off limit in phi units",
            "Define an upper cut-off limit for diameter in microns",
            "Define a lower cut-off limit for diameter in microns"
          ],
          "required": true,
          "note": ""
        },
        "AGGREGATION_MODEL": {
          "default": "PERCENTAGE",
          "description": "Define a particle aggregation parametrization",
          "inputs": [
            "NONE",
            "CORNELL",
            "COSTA",
            "PERCENTAGE"
          ],
          "inputs_str": [
            "No aggregation",
            "Cornell model (Cornell et al., 1983)",
            "Costa model (Costa et al., 2010). Valid only for tephra particles and `PLUME` source type",
            "Percentage model (Sulpizio et al., 2012)"
          ],
          "required": true,
          "note": ""
        },
        "NUMBER_OF_AGGREGATE_BINS": {
          "default": 2,
          "description": "Number of aggregate bins (default value is 1)",
          "inputs": [
            "integer"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL`!=`NONE`"
        },
        "DIAMETER_AGGREGATES_(MIC)": {
          "default": [
            300.0,
            200.0
          ],
          "description": "Diameter of aggregate bins in microns",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL`!=`NONE`"
        },
        "DENSITY_AGGREGATES_(KGM3)": {
          "default": [
            350.0,
            250.0
          ],
          "description": "Density of aggregate bins in kg m-3",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL`!=`NONE`"
        },
        "PERCENTAGE_(%)": {
          "default": [
            20.0,
            10.0
          ],
          "description": "Percentage of aggregate bins",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL`=`PERCENTAGE`"
        },
        "VSET_FACTOR": {
          "default": 0.5,
          "description": "Multiplicative correction factor for settling velocity of aggregates",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL`=`PERCENTAGE`"
        },
        "FRACTAL_EXPONENT": {
          "default": 2.99,
          "description": "Fractal exponent (see Costa et al., 2010 for details)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL`=`COSTA`"
        }
      }
    }
  },
  "SOURCE": {
    "main": {
      "name": "This block defines the variables needed by the SetSrc task to generate the source term for the emission phases",
      "params": {
        "SOURCE_TYPE": {
          "default": "TOP-HAT",
          "description": "Type of source vertical distribution",
          "inputs": [
            "POINT",
            "SUZUKI",
            "TOP-HAT",
            "PLUME",
            "RESUSPENSION"
          ],
          "inputs_str": [
            "Point source",
            "Suzuki-type source",
            "Top-hat source",
            "Plume source (based on the 1D BPT)",
            "Resuspension source"
          ],
          "required": true,
          "note": ""
        },
        "SOURCE_START_(HOURS_AFTER_00)": {
          "default": 0,
          "description": "List of source start time for each phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Alternatively, a file can be provided with 3 columns specifying start time/end time/height above vent for each phase. This option is useful in case of many source phases"
        },
        "SOURCE_END_(HOURS_AFTER_00)": {
          "default": 10,
          "description": "List of source end time for each phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "If a file is provided in `SOURCE_START_(HOURS_AFTER_00)` this line is ignored"
        },
        "LON_VENT": {
          "default": 15.0,
          "description": "Vent longitude",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "LAT_VENT": {
          "default": 37.75,
          "description": "Vent latitude",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "VENT_HEIGHT_(M)": {
          "default": 3000.0,
          "description": "Height of the vent in meters a.s.l.",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "HEIGHT_ABOVE_VENT_(M)": {
          "default": 6000.0,
          "description": "List of source heights in meters above the vent for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "The plume heights must be lower than the top of the computational domain. If a file is provided in `SOURCE_START_(HOURS_AFTER_00)` this line is ignored"
        },
        "MASS_FLOW_RATE_(KGS)": {
          "default": "ESTIMATE-DEGRUYTER",
          "description": "Defines the MFR or how the it should be computed (i.e. derived from column height)",
          "inputs": [
            "float_list",
            "ESTIMATE-MASTIN",
            "ESTIMATE-WOODHOUSE",
            "ESTIMATE-DEGRUYTER"
          ],
          "inputs_str": [
            "Mass flow rate in kg/s for each eruptive phase",
            "MFR is computed using the empirical fit by Mastin et al. (2009)",
            "MFR is computed using the empirical fit by Woodhouse et al. (2013)",
            "MFR is computed using the empirical fit by Degruyter and Bonadonna (2012)"
          ],
          "required": true,
          "note": ""
        },
        "ALFA_PLUME": {
          "default": 0.1,
          "description": "Entrainment coefficient",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `MASS_FLOW_RATE_(KGS)` is set to `ESTIMATE-WOODHOUSE` or `ESTIMATE-DEGRUYTER`"
        },
        "BETA_PLUME": {
          "default": 0.5,
          "description": "Entrainment coefficient",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `MASS_FLOW_RATE_(KGS)` is set to `ESTIMATE-WOODHOUSE` or `ESTIMATE-DEGRUYTER`"
        },
        "EXIT_TEMPERATURE_(K)": {
          "default": 1200.0,
          "description": "Mixture temperature",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `SOURCE_TYPE`=`PLUME` or to estimate MFR"
        },
        "EXIT_WATER_FRACTION_(%)": {
          "default": 0.0,
          "description": "Total (magmatic) water fraction",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `SOURCE_TYPE`=`PLUME` or to estimate MFR"
        }
      }
    },
    "IF_SUZUKI_SOURCE": {
      "name": "Used when `SOURCE_TYPE`=`IF_SUZUKI_SOURCE`",
      "params": {
        "A": {
          "default": 4,
          "description": "List of values giving the parameter A in the Suzuki distribution (Pfeiffer et al., 2005) for each phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "L": {
          "default": 5,
          "description": "List of values giving the parameter lambda in the Suzuki distribution (Pfeiffer et al., 2005) for each phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_TOP-HAT_SOURCE": {
      "name": "Used when `SOURCE_TYPE`=`IF_TOP-HAT_SOURCE`",
      "params": {
        "THICKNESS_(M)": {
          "default": 2000.0,
          "description": "List of thickness of the emission slab in meters for each phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PLUME_SOURCE": {
      "name": "Used when `SOURCE_TYPE`=`PLUME`",
      "params": {
        "SOLVE_PLUME_FOR": {
          "default": "MFR",
          "description": "Configure the FPLUME model embedded in FALL3D",
          "inputs": [
            "MFR",
            "HEIGHT"
          ],
          "inputs_str": [
            "SetSrc solves for mass flow rate given the column height (inverse problem)",
            "SetSrc solves for column height given the mass flow rate"
          ],
          "required": true,
          "note": ""
        },
        "MFR_SEARCH_RANGE": {
          "default": [
            4.0,
            9.0
          ],
          "description": "Two values n and m such that 10^n and 10^m specify the range of MFR values admitted in the iterative solving procedure",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `SOLVE_PLUME_FOR`=`MFR`"
        },
        "EXIT_VELOCITY_(MS)": {
          "default": 180.0,
          "description": "List of values of the magma exit velocity in m/s at the vent for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "EXIT_GAS_WATER_TEMPERATURE_(K)": {
          "default": 1000.0,
          "description": "List of values of the exit gas water temperature in K for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "EXIT_LIQUID_WATER_TEMPERATURE_(K)": {
          "default": 1000.0,
          "description": "List of values of the exit liquid water temperature in K for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "EXIT_SOLID_WATER_TEMPERATURE_(K)": {
          "default": 1000.0,
          "description": "List of values of the exit solid water temperature in K for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "EXIT_GAS_WATER_FRACTION_(%)": {
          "default": 5.0,
          "description": "List of values of the exit gas water fraction in percent for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "EXIT_LIQUID_WATER_FRACTION_(%)": {
          "default": 0.0,
          "description": "List of values of the exit liquid water fraction in percent for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "EXIT_SOLID_WATER_FRACTION_(%)": {
          "default": 0.0,
          "description": "List of values of the exit solid water fraction in percent for each eruptive phase",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "WIND_COUPLING": {
          "default": "yes",
          "description": "If wind coupling is considered",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enabled",
            "Vertical wind velocity profile is assumed zero"
          ],
          "required": true,
          "note": ""
        },
        "AIR_MOISTURE": {
          "default": "yes",
          "description": "Air moisture",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enabled",
            "Dry entrained air only"
          ],
          "required": true,
          "note": ""
        },
        "LATENT_HEAT": {
          "default": "no",
          "description": "Latent heat",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enabled",
            "Latent heat contribution is neglected"
          ],
          "required": true,
          "note": ""
        },
        "REENTRAINMENT": {
          "default": "yes",
          "description": "Reentrainment",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enabled",
            "Particle reentrainment is neglected"
          ],
          "required": true,
          "note": ""
        },
        "BURSIK_FACTOR": {
          "default": 0.1,
          "description": "Bursik factor xi",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "If not given, assumed equal to 0.1"
        },
        "Z_MIN_WIND": {
          "default": 100,
          "description": "Ignore wind entrainment below this zvalue (low jet region)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "If not given, assumed equal to 100"
        },
        "C_UMBRELLA": {
          "default": 1.2,
          "description": "Thickness of umbrella region relative to Hb (>1)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "If not given, assumed equal to 1.32"
        },
        "A_S": {
          "default": "CONSTANT 0.075 0.12",
          "description": "Plume entrainment coefficient",
          "inputs": [
            "CONSTANT float_list",
            "KAMINSKI-R",
            "KAMINSKI-C",
            "OLD"
          ],
          "inputs_str": [
            "A list of two values for: (value jet, value plume)",
            "TODO",
            "TODO",
            "TODO"
          ],
          "required": true,
          "note": ""
        },
        "A_V": {
          "default": "CONSTANT 0.3",
          "description": "Plume entrainment coefficient",
          "inputs": [
            "CONSTANT float",
            "TATE"
          ],
          "inputs_str": [
            "A constant value is assumed",
            "TODO"
          ],
          "required": true,
          "note": ""
        }
      }
    }
  },
  "ENSEMBLE": {
    "main": {
      "name": "This block is used by task SetEns to generate the ensemble members",
      "params": {
        "RANDOM_NUMBERS_FROM_FILE": {
          "default": "yes",
          "description": "Indicate whether the ensemble should be reconstructed",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Read ensemble perturbations from `*.ens` files",
            "Reconstruct the ensemble and generate new `*.ens` files"
          ],
          "required": true,
          "note": "If `*.ens` are not found, option `RANDOM_NUMBERS_FROM_FILE` = `NO` will be used"
        },
        "PERTURBATE_COLUMN_HEIGHT": {
          "default": "RELATIVE",
          "description": "Perturbate eruption column height",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": ""
        },
        "PERTURBATE_MASS_FLOW_RATE": {
          "default": "NO",
          "description": "Perturbate mass eruption rate",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "This option is deactivated for `SOURCE_TYPE=PLUME` or `MASS_FLOW_RATE_(KGS)=ESTIMATE-*` options"
        },
        "PERTURBATE_SOURCE_START": {
          "default": "NO",
          "description": "Perturbate the starting time of each eruptive phase",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": ""
        },
        "PERTURBATE_SOURCE_DURATION": {
          "default": "NO",
          "description": "Perturbate the duration time of each eruptive phase",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": ""
        },
        "PERTURBATE_TOP-HAT_THICKNESS": {
          "default": "NO",
          "description": "Perturbate the top-hat thickness",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `SOURCE_TYPE = TOP-HAT`"
        },
        "PERTURBATE_SUZUKI_A": {
          "default": "RELATIVE",
          "description": "Perturbate the Suzuki coefficient `A`",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `SOURCE_TYPE = SUZUKI`"
        },
        "PERTURBATE_SUZUKI_L": {
          "default": "RELATIVE",
          "description": "Perturbate the Suzuki coefficient `L`",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `SOURCE_TYPE = SUZUKI`"
        },
        "PERTURBATE_WIND": {
          "default": "NO",
          "description": "Perturbate the horizontal wind components",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Zonal and meridional wind components are independently perturbed (two random numbers are generated)"
        },
        "PERTURBATE_DATA_INSERTION_CLOUD_HEIGHT": {
          "default": "NO",
          "description": "Perturbate the cloud insertion height",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `INITIAL_CONDITION = INSERTION`"
        },
        "PERTURBATE_DATA_INSERTION_CLOUD_THICKNESS": {
          "default": "NO",
          "description": "Perturbate the cloud insertion thickness",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `INITIAL_CONDITION = INSERTION`"
        },
        "PERTURBATE_FI_MEAN": {
          "default": "NO",
          "description": "Perturbate the mean of the TGSD",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "For bimodal distributions `BIGAUSSIAN` and `ESTIMATE`, only the fine subpopulation is perturbed"
        },
        "PERTURBATE_DIAMETER_AGGREGATES_(MIC)": {
          "default": "NO",
          "description": "Perturbate the diameter of the particle aggregates",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL` != `NONE`"
        },
        "PERTURBATE_DENSITY_AGGREGATES": {
          "default": "NO",
          "description": "Perturbate the density of the particle aggregates",
          "inputs": [
            "NO",
            "RELATIVE",
            "ABSOLUTE"
          ],
          "inputs_str": [
            "Disable perturbation",
            "Perturbation range given as a fraction of the central value",
            "Perturbation range given as an absolute value"
          ],
          "required": true,
          "note": "Only used if `AGGREGATION_MODEL` != `NONE`"
        }
      }
    },
    "IF_PERTURBATE_COLUMN_HEIGHT": {
      "name": "Used when `PERTURBATE_COLUMN_HEIGHT` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 20,
          "description": "Define the perturbation range in meters (`PERTURBATE_COLUMN_HEIGHT` = `ABSOLUTE`) or percent (`PERTURBATE_COLUMN_HEIGHT` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_MASS_FLOW_RATE": {
      "name": "Used when `PERTURBATE_MASS_FLOW_RATE` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 20,
          "description": "Define the perturbation range in kg/s (`PERTURBATE_MASS_FLOW_RATE` = `ABSOLUTE`) or percent (`PERTURBATE_MASS_FLOW_RATE` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_SOURCE_START": {
      "name": "Used when `PERTURBATE_SOURCE_START` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 3600,
          "description": "Define the perturbation range in s (`PERTURBATE_SOURCE_START` = `ABSOLUTE`) or percent (`PERTURBATE_SOURCE_START` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_SOURCE_DURATION": {
      "name": "Used when `PERTURBATE_SOURCE_DURATION` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 3600,
          "description": "Define the perturbation range in s (`PERTURBATE_SOURCE_DURATION` = `ABSOLUTE`) or percent (`PERTURBATE_SOURCE_DURATION` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_TOP-HAT_THICKNESS": {
      "name": "Used when `PERTURBATE_TOP-HAT_THICKNESS` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 1000,
          "description": "Define the perturbation range in meters (`PERTURBATE_TOP-HAT_THICKNESS` = `ABSOLUTE`) or percent (`PERTURBATE_TOP-HAT_THICKNESS` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_SUZUKI_A": {
      "name": "Used when `PERTURBATE_SUZUKI_A` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 25,
          "description": "Define the perturbation range of the dimensionless parameter `A` in absolute units (`IF_PERTURBATE_SUZUKI_A` = `ABSOLUTE`) or percent (`IF_PERTURBATE_SUZUKI_A` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_SUZUKI_L": {
      "name": "Used when `PERTURBATE_SUZUKI_L` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 25,
          "description": "Define the perturbation range of the dimensionless parameter `L` in absolute units (`IF_PERTURBATE_SUZUKI_L` = `ABSOLUTE`) or percent (`IF_PERTURBATE_SUZUKI_L` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_WIND": {
      "name": "Used when `PERTURBATE_WIND` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 10.0,
          "description": "Define the perturbation range in m/s (`PERTURBATE_WIND` = `ABSOLUTE`) or percent (`PERTURBATE_WIND` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_DATA_INSERTION_CLOUD_HEIGHT": {
      "name": "Used when `PERTURBATE_DATA_INSERTION_CLOUD_HEIGHT` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 20,
          "description": "Define the perturbation range in meters (`IF_PERTURBATE_DATA_INSERTION_CLOUD_HEIGHT` = `ABSOLUTE`) or percent (`IF_PERTURBATE_DATA_INSERTION_CLOUD_HEIGHT` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_DATA_INSERTION_CLOUD_THICKNESS": {
      "name": "Used when `PERTURBATE_DATA_INSERTION_CLOUD_THICKNESS` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 20,
          "description": "Define the perturbation range in meters (`PERTURBATE_DATA_INSERTION_CLOUD_THICKNESS` = `ABSOLUTE`) or percent (`PERTURBATE_DATA_INSERTION_CLOUD_THICKNESS` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_FI_MEAN": {
      "name": "Used when `PERTURBATE_FI_MEAN` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 1,
          "description": "Define the perturbation range in phi units (`PERTURBATE_FI_MEAN` = `ABSOLUTE`) or percent (`PERTURBATE_FI_MEAN` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_DIAMETER_AGGREGATES_(MIC)": {
      "name": "Used when `PERTURBATE_DIAMETER_AGGREGATES_(MIC)` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 100,
          "description": "Define the perturbation range in microns (`PERTURBATE_DIAMETER_AGGREGATES_(MIC)` = `ABSOLUTE`) or percent (`PERTURBATE_DIAMETER_AGGREGATES_(MIC)` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_PERTURBATE_DENSITY_AGGREGATES": {
      "name": "Used when `PERTURBATE_DENSITY_AGGREGATES` != `NO`",
      "params": {
        "PERTURBATION_RANGE": {
          "default": 100,
          "description": "Define the perturbation range in kg/m3 (`PERTURBATE_DENSITY_AGGREGATES` = `ABSOLUTE`) or percent (`PERTURBATE_DENSITY_AGGREGATES` = `RELATIVE`)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "PDF": {
          "default": "UNIFORM",
          "description": "Define the sampling Probability Density Function (PDF)",
          "inputs": [
            "UNIFORM",
            "GAUSSIAN"
          ],
          "inputs_str": [
            "Uniform (constant) PDF",
            "Gaussian PDF centred at the reference value"
          ],
          "required": true,
          "note": ""
        }
      }
    }
  },
  "ENSEMBLE_POST": {
    "main": {
      "name": "The block is used by the task PosEns for post-processing ensemble runs",
      "params": {
        "POSTPROCESS_MEMBERS": {
          "default": "no",
          "description": "Define if individual member results are included in the output file `.ens.nc`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include individual members",
            "Exclude individual members"
          ],
          "required": true,
          "note": "The option `POSTPROCESS_MEMBERS` = `YES` may result in very large files"
        },
        "POSTPROCESS_MEAN": {
          "default": "no",
          "description": "Postprocess the ensemble mean in the output file `*.ens.nc`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include ensemble mean",
            "Exclude ensemble mean"
          ],
          "required": true,
          "note": ""
        },
        "POSTPROCESS_LOGMEAN": {
          "default": "no",
          "description": "Postprocess the ensemble (log) mean in the output file `*.ens.nc`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include ensemble (log) mean",
            "Exclude ensemble (log) mean"
          ],
          "required": true,
          "note": ""
        },
        "POSTPROCESS_MEDIAN": {
          "default": "yes",
          "description": "Postprocess the ensemble median in the output file `*.ens.nc`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include ensemble median",
            "Exclude ensemble median"
          ],
          "required": true,
          "note": ""
        },
        "POSTPROCESS_STANDARD_DEV": {
          "default": "no",
          "description": "Postprocess the ensemble standard deviation in the output file `*.ens.nc`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include ensemble standard deviation",
            "Exclude ensemble standard deviation"
          ],
          "required": true,
          "note": ""
        },
        "POSTPROCESS_PROBABILITY": {
          "default": "no",
          "description": "Generate probabilistic forecasts based on thresholds (see below) in the output file `*.ens.nc`. Probabilities are obtained by counting the fraction of ensemble members exceeding a given threshold",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include probabilistic forecasts",
            "Exclude probabilistic forecasts"
          ],
          "required": true,
          "note": ""
        },
        "POSTPROCESS_PERCENTILES": {
          "default": "no",
          "description": "Generate percentile forecasts in the output file `*.ens.nc`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Include percentile forecasts",
            "Exclude percentile forecasts"
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_POSTPROCESS_PROBABILITY": {
      "name": "Used when `POSTPROCESS_PROBABILITY` = `YES`",
      "params": {
        "CONCENTRATION_THRESHOLDS_(MG/M3)": {
          "default": 2,
          "description": "List of values giving the concentration threshold",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "A probability forecast map is generated for each value"
        },
        "COLUMN_MASS_THRESHOLDS_(G/M2)": {
          "default": 1,
          "description": "List of values giving the column mass threshold for species `TEPHRA`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "A probability forecast map is generated for each value"
        },
        "COLUMN_MASS_THRESHOLDS_(DU)": {
          "default": 100,
          "description": "List of values giving the column mass threshold for species `SO2`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "A probability forecast map is generated for each value"
        },
        "GROUND_LOAD_THRESHOLDS_(KG/M2)": {
          "default": 1,
          "description": "List of values giving the deposit ground load threshold for species `TEPHRA`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "A probability forecast map is generated for each value"
        }
      }
    },
    "IF_POSTPROCESS_PERCENTILES": {
      "name": "Used when `POSTPROCESS_PERCENTILES` = `YES`",
      "params": {
        "PERCENTILE_VALUES_(%)": {
          "default": 50,
          "description": "List of values giving the percentiles in percent",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "A percentile forecast map is generated for each value"
        }
      }
    }
  },
  "MODEL_PHYSICS": {
    "main": {
      "name": "This block defines the specific variables related to physics in the FALL3D model",
      "params": {
        "LIMITER": {
          "default": "SUPERBEE",
          "description": "Flux limiter option",
          "inputs": [
            "MINMOD",
            "SUPERBEE",
            "OSPRE"
          ],
          "inputs_str": [
            "MINMOD option",
            "SUPERBEE option",
            "OSPRE option"
          ],
          "required": true,
          "note": ""
        },
        "TIME_MARCHING": {
          "default": "RUNGE-KUTTA",
          "description": "Time integration scheme",
          "inputs": [
            "EULER",
            "RUNGE-KUTTA"
          ],
          "inputs_str": [
            "Euler (1st order)",
            "Runge-Kutta (4th order)"
          ],
          "required": true,
          "note": ""
        },
        "CFL_CRITERION": {
          "default": "ALL_DIMENSIONS",
          "description": "Courant criterion (critical time step)",
          "inputs": [
            "ONE_DIMENSIONAL",
            "ALL_DIMENSIONS"
          ],
          "inputs_str": [
            "Minimum for each dimension",
            "Minimum for all dimensions (default)"
          ],
          "required": true,
          "note": ""
        },
        "CFL_SAFETY_FACTOR": {
          "default": 0.9,
          "description": "Safety factor for critical time step",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": "Default = 0.9"
        },
        "TERMINAL_VELOCITY_MODEL": {
          "default": "GANSER",
          "description": "Parametrization for terminal settling velocity estimation",
          "inputs": [
            "ARASTOOPOUR",
            "GANSER",
            "WILSON",
            "DELLINO",
            "PFEIFFER",
            "DIOGUARDI2017",
            "DIOGUARDI2018"
          ],
          "inputs_str": [
            "TODO",
            "TODO",
            "TODO",
            "TODO",
            "TODO",
            "TODO",
            "TODO"
          ],
          "required": true,
          "note": ""
        },
        "HORIZONTAL_TURBULENCE_MODEL": {
          "default": "CMAQ",
          "description": "Type of parametrization used to compute the horizontal diffusion",
          "inputs": [
            "CONSTANT float",
            "CMAQ",
            "RAMS"
          ],
          "inputs_str": [
            "Constant diffusion coefficient in m^2/s",
            "CMAQ option",
            "RAMS option"
          ],
          "required": true,
          "note": ""
        },
        "VERTICAL_TURBULENCE_MODEL": {
          "default": "SIMILARITY",
          "description": "Type of parametrization used to compute the vertical diffusion",
          "inputs": [
            "CONSTANT float",
            "SIMILARITY"
          ],
          "inputs_str": [
            "Constant diffusion coefficient in m^2/s",
            "Equations based on similarity theory"
          ],
          "required": true,
          "note": ""
        },
        "RAMS_CS": {
          "default": 0.2275,
          "description": "Parameter CS required by the horizontal diffusion parametrization",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Only used if `HORIZONTAL_TURBULENCE_MODEL` = `RAMS`"
        },
        "WET_DEPOSITION": {
          "default": "no",
          "description": "Defines whether wet deposition model is enabled",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enable wet deposition",
            "Disable wet deposition"
          ],
          "required": true,
          "note": ""
        },
        "DRY_DEPOSITION": {
          "default": "no",
          "description": "Defines whether dry deposition model is enabled",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enable dry deposition",
            "Disable dry deposition"
          ],
          "required": true,
          "note": ""
        },
        "GRAVITY_CURRENT": {
          "default": "no",
          "description": "Define whether the gravity current model is enabled",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enable gravity current",
            "Disable gravity current"
          ],
          "required": true,
          "note": "Only for `TEPHRA` species"
        }
      }
    },
    "IF_GRAVITY_CURRENT": {
      "name": "Used when `GRAVITY_CURRENT` = `YES`",
      "params": {
        "C_FLOW_RATE": {
          "default": 870,
          "description": "Empirical constant for volumetric flow rate at the Neutral Buoyancy Level (NBL)",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "LAMBDA_GRAV": {
          "default": 0.2,
          "description": "Empirical constant for the gravity current model",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "K_ENTRAIN": {
          "default": 0.1,
          "description": "Entrainment coefficient for the gravity current model",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "BRUNT_VAISALA": {
          "default": 0.02,
          "description": "Brunt-V\u00e4is\u00e4l\u00e4 frequency accounting for ambient stratification",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "GC_START_(HOURS_AFTER_00)": {
          "default": 0,
          "description": "Gravity current starting time",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "GC_END_(HOURS_AFTER_00)": {
          "default": 3,
          "description": "Gravity current end time",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    }
  },
  "MODEL_OUTPUT": {
    "main": {
      "name": "This block is read by task FALL3D and defines specific variables related to output strategy",
      "params": {
        "PARALLEL_IO": {
          "default": "no",
          "description": "Use parallel Input/Output for netCDF files",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Enable parallel I/O",
            "Disable parallel I/O"
          ],
          "required": true,
          "note": "The option `PARALLEL_IO` = `YES` requires the installation of the high-performance parallel I/O library for accessing NetCDF files"
        },
        "LOG_FILE_LEVEL": {
          "default": "FULL",
          "description": "Level of detail in the FALL3D log file",
          "inputs": [
            "NONE",
            "NORMAL",
            "FULL"
          ],
          "inputs_str": [
            "TODO",
            "TODO",
            "TODO"
          ],
          "required": true,
          "note": ""
        },
        "RESTART_TIME_INTERVAL_(HOURS)": {
          "default": "END_ONLY",
          "description": "Define the restart file output frequency",
          "inputs": [
            "float",
            "NONE",
            "END_ONLY"
          ],
          "inputs_str": [
            "Frequency in hours",
            "Restart file not written",
            "Restart file written only at the end of the simulation"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_JSON_FILES": {
          "default": "no",
          "description": "Generate json files",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Generate json files",
            "Do not generate json files"
          ],
          "required": false,
          "note": "Only for tasks SetTGSD SetDbs SetSrc FALL3D"
        },
        "OUTPUT_INTERMEDIATE_FILES": {
          "default": "no",
          "description": "Generate intermediate files",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Generate intermediate files",
            "Do not generate intermediate files"
          ],
          "required": true,
          "note": "Only for task ALL can be set `OUTPUT_INTERMEDIATE_FILES` = `NO`"
        },
        "OUTPUT_TIME_START_(HOURS)": {
          "default": "RUN_START",
          "description": "Start time for output",
          "inputs": [
            "float",
            "RUN_START"
          ],
          "inputs_str": [
            "Time (in hours) from which the output file is written",
            "Start writing output file from the beginning"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_TIME_INTERVAL_(HOURS)": {
          "default": 1.0,
          "description": "Time period of model output in hours",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_3D_CONCENTRATION": {
          "default": "no",
          "description": "Specify whether the 3D concentration field should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the 3D concentration field",
            "Do not write the 3D concentration field"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_3D_CONCENTRATION_BINS": {
          "default": "no",
          "description": "Specify whether the 3D concentration field for each bin should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the 3D concentration field for each bin",
            "Do not write the 3D concentration field for each bin"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_SURFACE_CONCENTRATION": {
          "default": "yes",
          "description": "Specify whether the surface concentration field should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the surface concentration field",
            "Do not write the surface concentration field"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_COLUMN_LOAD": {
          "default": "yes",
          "description": "Specify whether the column mass load field should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the column mass load field",
            "Do not write the column mass load field"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_CLOUD_TOP": {
          "default": "yes",
          "description": "Specify whether the cloud top height field should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the cloud top height field",
            "Do not write the cloud top height field"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_GROUND_LOAD": {
          "default": "yes",
          "description": "Specify whether the deposit mass load field should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the deposit mass load field",
            "Do not write the deposit mass load field"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_GROUND_LOAD_BINS": {
          "default": "no",
          "description": "Specify whether the deposit mass load field for each bin should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the deposit mass load field for each bin",
            "Do not write the deposit mass load field for each bin"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_WET_DEPOSITION": {
          "default": "no",
          "description": "Specify whether the wet deposition mass field should be written in the output file",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Write the wet deposition mass field",
            "Do not write the wet deposition mass field"
          ],
          "required": true,
          "note": ""
        },
        "TRACK_POINTS": {
          "default": "no",
          "description": "Specifies whether the timeseries for the tracking points should be written",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Generate tracking point file",
            "Do not generate tracking point file"
          ],
          "required": true,
          "note": ""
        },
        "TRACK_POINTS_FILE": {
          "default": "my_file.pts",
          "description": "Path to the file with the list of tracked points",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "Used only if `TRACK_POINTS_FILE` = `YES`"
        },
        "OUTPUT_CONCENTRATION_AT_XCUTS": {
          "default": "no",
          "description": "Output concentration at x-coordinate values specified in `X-VALUES`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Output concentration cuts",
            "Do not output concentration cuts"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_CONCENTRATION_AT_YCUTS": {
          "default": "no",
          "description": "Output concentration at y-coordinate values specified in `Y-VALUES`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Output concentration cuts",
            "Do not output concentration cuts"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_CONCENTRATION_AT_ZCUTS": {
          "default": "no",
          "description": "Output concentration at z-coordinate values specified in `Z-VALUES`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Output concentration cuts",
            "Do not output concentration cuts"
          ],
          "required": true,
          "note": ""
        },
        "OUTPUT_CONCENTRATION_AT_FL": {
          "default": "yes",
          "description": "Output concentration at flight level values specified in `FL-VALUES`",
          "inputs": [
            "YES",
            "NO"
          ],
          "inputs_str": [
            "Output concentration cuts",
            "Do not output concentration cuts"
          ],
          "required": true,
          "note": ""
        },
        "X-VALUES": {
          "default": 15,
          "description": "List of x-coordinate values read when `OUTPUT_CONCENTRATION_AT_XCUTS` = `YES`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "Y-VALUES": {
          "default": 37.5,
          "description": "List of y-coordinate values read when `OUTPUT_CONCENTRATION_AT_YCUTS` = `YES`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "Z-VALUES": {
          "default": [
            5000,
            10000,
            15000
          ],
          "description": "List of z-coordinate values read when `OUTPUT_CONCENTRATION_AT_ZCUTS` = `YES`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "FL-VALUES": {
          "default": [
            50,
            100,
            150,
            200,
            250,
            300,
            350,
            400
          ],
          "description": "List of flight level values read when `OUTPUT_CONCENTRATION_AT_FL` = `YES`",
          "inputs": [
            "float_list"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    }
  },
  "MODEL_VALIDATION": {
    "main": {
      "name": "This block is read by task PosVal to perform automatic model validation with a set of quantitative and categorical metrics",
      "params": {
        "OBSERVATIONS_TYPE": {
          "default": "SATELLITE_RETRIEVAL",
          "description": "Type of observations",
          "inputs": [
            "SATELLITE_DETECTION",
            "SATELLITE_RETRIEVAL",
            "DEPOSIT_CONTOURS",
            "DEPOSIT_POINTS"
          ],
          "inputs_str": [
            "Satellite yes/no flag contours",
            "Satellite quantitative retrievals of `TEPHRA`/`SO2` species",
            "Deposit isopach/isopleth contours read from a gridded netCDF file",
            "Deposit point-wise observations"
          ],
          "required": true,
          "note": ""
        },
        "OBSERVATIONS_FILE": {
          "default": "Example-8.0.sat.nc",
          "description": "Path to the files with observations",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        },
        "OBSERVATIONS_DICTIONARY_FILE": {
          "default": "Sat.tbl",
          "description": "Path to the observations dictionary file",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": false,
          "note": "Examples can be found in `Other/Dep`"
        },
        "RESULTS_FILE": {
          "default": "Example.ens.nc",
          "description": "Path to the FALL3D output file with simulation results (`*.res.nc` or `*.ens.nc`)",
          "inputs": [
            "string"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": ""
        }
      }
    },
    "IF_OBSERVATIONS_TYPE_SATELLITE": {
      "name": "Used when `OBSERVATIONS_TYPE` = `SATELLITE_DETECTION` or `OBSERVATIONS_TYPE` = `SATELLITE_RETRIEVAL`",
      "params": {
        "COLUMN_MASS_OBSERVATION_THRESHOLD_(G/M2)": {
          "default": 0.1,
          "description": "Column mass threshold in g/m2 for `TEPHRA` species",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "It should be consistent with `COLUMN_MASS_THRESHOLDS_(G/M2)` for ensemble runs"
        },
        "COLUMN_MASS_OBSERVATION_THRESHOLD_(DU)": {
          "default": 1,
          "description": "Column mass threshold in DU for `SO2` species",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "It should be consistent with `COLUMN_MASS_THRESHOLDS_(DU)` for ensemble runs"
        }
      }
    },
    "IF_OBSERVATIONS_TYPE_DEPOSIT": {
      "name": "Used when `OBSERVATIONS_TYPE` = `DEPOSIT_CONTOURS` or `OBSERVATIONS_TYPE` = `DEPOSIT_POINTS`",
      "params": {
        "GROUND_LOAD_OBSERVATION_THRESHOLD_(KG/M2)": {
          "default": 0.1,
          "description": "Deposit load threshold in kg/m2 for `TEPHRA` species",
          "inputs": [
            "float"
          ],
          "inputs_str": [
            ""
          ],
          "required": true,
          "note": "It should be consistent with `GROUND_LOAD_THRESHOLDS_(KG/M2)` for ensemble runs"
        }
      }
    }
  }
}